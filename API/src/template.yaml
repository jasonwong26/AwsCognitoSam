AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  aws-cognito-sam tests

Parameters:
  StageName:
    Type: String
    Default: 'Dev'
    Description: (Required) The stage for this deployment.
    MinLength: 3
    MaxLength: 10
    AllowedPattern: ^[A-Za-z]+$
    ConstraintDescription: 'Required. Can be characters only. No numbers or special characters allowed.'
  UserEmail:
    Type: String
    Description: (Required) the email for the test account.
    MinLength: 3
    AllowedPattern: ^(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|"(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21\x23-\x5b\x5d-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])*")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\[(?:(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9]))\.){3}(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9])|[a-z0-9-]*[a-z0-9]:(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21-\x5a\x53-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])+)\])$
    ConstraintDescription: 'Required. Must be a valid email.'

Globals:
  Function:
    MemorySize: 256
    Runtime: nodejs12.x
    Tags:
      project: AWS Cognito SAM Test
      stage: !Ref StageName

Resources:  
  ServiceApi:
    Type: AWS::Serverless::Api
    DependsOn: UserPool
    Properties:
      Name: !Sub
        - AwsCognitoSam-${StageName}
        - { StageName: !Ref StageName }
      StageName: !Ref StageName
      Cors:
        AllowMethods: "'*'"
        AllowHeaders: "'*'"
        AllowOrigin: "'*'"
      Auth:
        Authorizers:
          CognitoAuthorizer:
            UserPoolArn: !GetAtt "UserPool.Arn"
      Tags:
        project: AWS Cognito SAM Test

  UserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      UserPoolName: AwsCognitoSam-Users
      UserPoolTags:
        project: AWS Cognito SAM Test
  UserPoolTokenClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      UserPoolId: !Ref UserPool
  UserPoolUser:
    Type: AWS::Cognito::UserPoolUser
    Properties:
      DesiredDeliveryMediums:
        - EMAIL
      UserAttributes:
        - Name: email
          Value: !Ref UserEmail 
      Username: !Ref UserEmail
      UserPoolId: !Ref UserPool

  OpenFunction:
    Type: AWS::Serverless::Function
    Properties:
      Description: Handles the basic request with no need for authentication
      CodeUri: open/
      Handler: app.handler
      Events:
        Get:
          Type: Api
          Properties:
            Path: /open
            RestApiId: !Ref ServiceApi
            Method: GET
  AuthorizedFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: authorized/
      Handler: app.handler
      Events:
        Get:
          Type: Api
          Properties:
            Path: /
            RestApiId: !Ref ServiceApi
            Method: GET
            Auth:
              Authorizer: CognitoAuthorizer

Outputs:
  ServiceID:
    Description: "The generated API ID"
    Value: !Ref ServiceApi
  ServiceURI:
    Description: "The API URI to connect to"
    Value: !Join [ '', [ 'http://', !Ref ServiceApi, '.execute-api.',!Ref 'AWS::Region','.amazonaws.com/',!Ref 'StageName'] ]
